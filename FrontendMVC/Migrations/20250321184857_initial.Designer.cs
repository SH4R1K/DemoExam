// <auto-generated />
using System;
using FrontendMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FrontendMVC.Migrations
{
    [DbContext(typeof(MasterPolContext))]
    [Migration("20250321184857_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FrontendMVC.Models.Partner", b =>
                {
                    b.Property<int>("IdPartner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("varchar(125)");

                    b.Property<int>("IdPartnerDirector")
                        .HasColumnType("int");

                    b.Property<int>("IdPartnerType")
                        .HasColumnType("int");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("INN");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("IdPartner")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPartnerDirector" }, "fk_partner_partner_director1_idx");

                    b.HasIndex(new[] { "IdPartnerType" }, "fk_partner_partner_type_idx");

                    b.ToTable("Partner", (string)null);
                });

            modelBuilder.Entity("FrontendMVC.Models.PartnerDirector", b =>
                {
                    b.Property<int>("IdPartnerDirector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdPartnerDirector")
                        .HasName("PRIMARY");

                    b.ToTable("PartnerDirector", (string)null);
                });

            modelBuilder.Entity("FrontendMVC.Models.PartnerProduct", b =>
                {
                    b.Property<int>("IdPartnerProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("IdPartner")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdPartnerProduct")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPartner" }, "fk_PartnerProduct_Partner1_idx");

                    b.HasIndex(new[] { "IdProduct" }, "fk_PartnerProduct_Product1_idx");

                    b.ToTable("PartnerProduct", (string)null);
                });

            modelBuilder.Entity("FrontendMVC.Models.PartnerType", b =>
                {
                    b.Property<int>("IdPartnerType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdPartnerType")
                        .HasName("PRIMARY");

                    b.ToTable("PartnerType", (string)null);
                });

            modelBuilder.Entity("FrontendMVC.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Article")
                        .HasColumnType("int");

                    b.Property<int>("IdProductType")
                        .HasColumnType("int");

                    b.Property<decimal>("MinimalPrice")
                        .HasPrecision(7)
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdProduct")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdProductType" }, "fk_Product_ProductType1_idx");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("FrontendMVC.Models.ProductType", b =>
                {
                    b.Property<int>("IdProductType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdProductType")
                        .HasName("PRIMARY");

                    b.ToTable("ProductType", (string)null);
                });

            modelBuilder.Entity("FrontendMVC.Models.Partner", b =>
                {
                    b.HasOne("FrontendMVC.Models.PartnerDirector", "IdPartnerDirectorNavigation")
                        .WithMany("Partners")
                        .HasForeignKey("IdPartnerDirector")
                        .IsRequired()
                        .HasConstraintName("fk_partner_partner_director1");

                    b.HasOne("FrontendMVC.Models.PartnerType", "IdPartnerTypeNavigation")
                        .WithMany("Partners")
                        .HasForeignKey("IdPartnerType")
                        .IsRequired()
                        .HasConstraintName("fk_partner_partner_type");

                    b.Navigation("IdPartnerDirectorNavigation");

                    b.Navigation("IdPartnerTypeNavigation");
                });

            modelBuilder.Entity("FrontendMVC.Models.PartnerProduct", b =>
                {
                    b.HasOne("FrontendMVC.Models.Partner", "IdPartnerNavigation")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("IdPartner")
                        .IsRequired()
                        .HasConstraintName("fk_PartnerProduct_Partner1");

                    b.HasOne("FrontendMVC.Models.Product", "IdProductNavigation")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("IdProduct")
                        .IsRequired()
                        .HasConstraintName("fk_PartnerProduct_Product1");

                    b.Navigation("IdPartnerNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("FrontendMVC.Models.Product", b =>
                {
                    b.HasOne("FrontendMVC.Models.ProductType", "IdProductTypeNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdProductType")
                        .IsRequired()
                        .HasConstraintName("fk_Product_ProductType1");

                    b.Navigation("IdProductTypeNavigation");
                });

            modelBuilder.Entity("FrontendMVC.Models.Partner", b =>
                {
                    b.Navigation("OrderedProducts");
                });

            modelBuilder.Entity("FrontendMVC.Models.PartnerDirector", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("FrontendMVC.Models.PartnerType", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("FrontendMVC.Models.Product", b =>
                {
                    b.Navigation("OrderedProducts");
                });

            modelBuilder.Entity("FrontendMVC.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
